# Docker Compose for LangSwarm OpenTelemetry Examples
# 
# This sets up a complete observability stack for testing LangSwarm's
# OpenTelemetry integration with Jaeger, Prometheus, and Grafana.
#
# Usage:
#   docker-compose up -d
#   
# Services:
#   - Jaeger UI: http://localhost:16686
#   - Prometheus: http://localhost:9090  
#   - Grafana: http://localhost:3000 (admin/admin)

version: '3.8'

services:
  # Jaeger - Distributed Tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: langswarm-jaeger
    ports:
      - "16686:16686"    # Jaeger UI
      - "14268:14268"    # Jaeger HTTP collector
      - "4317:4317"      # OTLP gRPC receiver
      - "4318:4318"      # OTLP HTTP receiver
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - observability

  # Prometheus - Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    container_name: langswarm-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - observability

  # Grafana - Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: langswarm-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - observability
    depends_on:
      - prometheus

  # OTEL Collector (Optional - for advanced routing)
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: langswarm-otel-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "4317:4317"      # OTLP gRPC receiver
      - "4318:4318"      # OTLP HTTP receiver
      - "8889:8889"      # Prometheus metrics
    networks:
      - observability
    depends_on:
      - jaeger
      - prometheus

networks:
  observability:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:

"use strict";(self.webpackChunkdocusaurus_docs=self.webpackChunkdocusaurus_docs||[]).push([[924],{7161:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"getting-started","title":"Getting Started with LangSwarm","description":"Welcome to LangSwarm, a modular Python framework for orchestrating intelligent workflows across multiple AI agents. LangSwarm allows you to create, configure, and connect agents using YAML or Python, and execute workflows via local logic or external gateways like Telegram, Slack, or Twilio.","source":"@site/docs/getting-started.md","sourceDirName":".","slug":"/","permalink":"/LangSwarm/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"id":"getting-started","title":"Getting Started with LangSwarm","slug":"/","sidebar_label":"Getting Started","sidebar_position":0},"sidebar":"defaultSidebar"}');var s=r(4848),a=r(8453);const o={id:"getting-started",title:"Getting Started with LangSwarm",slug:"/",sidebar_label:"Getting Started",sidebar_position:0},i="Getting Started with LangSwarm",l={},c=[{value:"\u2699\ufe0f Installation",id:"\ufe0f-installation",level:2},{value:"\ud83d\ude80 Project Structure",id:"-project-structure",level:2},{value:"\ud83e\uddf1 Basic Concepts",id:"-basic-concepts",level:2},{value:"\ud83e\udde9 1. <strong>Simple by Design</strong>",id:"-1-simple-by-design",level:3},{value:"\ud83d\udd01 2. <strong>Workflows &amp; Orchestration</strong>",id:"-2-workflows--orchestration",level:3},{value:"\ud83d\udd17 3. <strong>Plug Into Your Stack</strong>",id:"-3-plug-into-your-stack",level:3},{value:"\ud83e\udde0 4. <strong>Bring Your Own Agent (BYOA)</strong>",id:"-4-bring-your-own-agent-byoa",level:3},{value:"\ud83d\udd0d 5. <strong>Global Logging</strong>",id:"-5-global-logging",level:3},{value:"\ud83e\uddea Usage",id:"-usage",level:2},{value:"1. Define Your Agents and Workflows",id:"1-define-your-agents-and-workflows",level:3},{value:"2. Run from Python",id:"2-run-from-python",level:3}];function d(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"getting-started-with-langswarm",children:"Getting Started with LangSwarm"})}),"\n",(0,s.jsxs)(n.p,{children:["Welcome to ",(0,s.jsx)(n.strong,{children:"LangSwarm"}),", a modular Python framework for orchestrating intelligent workflows across multiple AI agents. LangSwarm allows you to create, configure, and connect agents using YAML or Python, and execute workflows via local logic or external gateways like Telegram, Slack, or Twilio."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-installation",children:"\u2699\ufe0f Installation"}),"\n",(0,s.jsx)(n.p,{children:"Install from PyPI:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pip install langswarm\n"})}),"\n",(0,s.jsx)(n.p,{children:"Install from source:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/your-org/langswarm.git\ncd langswarm\npip install -r requirements.txt\n"})}),"\n",(0,s.jsx)(n.p,{children:"Python 3.10+ recommended"}),"\n",(0,s.jsx)(n.p,{children:"For production use or custom integrations, you may also want to install platform-specific packages (e.g., openai, slack_sdk, etc.)."}),"\n",(0,s.jsx)(n.h2,{id:"-project-structure",children:"\ud83d\ude80 Project Structure"}),"\n",(0,s.jsx)(n.p,{children:"LangSwarm makes orchestrating intelligent workflows across AI agents simple, flexible, and scalable. Dive in and start building smarter AI systems today!"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"langswarm/\n\u251c\u2500\u2500 core/        # Agent registry, config, templates, utilities\n\u251c\u2500\u2500 memory/      # Placeholder adapters and memory wrappers\n\u251c\u2500\u2500 synapse/     # Workflow engine, defaults, tool system\n\u251c\u2500\u2500 ui/          # Gateways: Slack, Telegram, Twilio, Discord, etc.\ntargets/         # YAML config for agents and workflows\n"})}),"\n",(0,s.jsx)(n.h2,{id:"-basic-concepts",children:"\ud83e\uddf1 Basic Concepts"}),"\n",(0,s.jsxs)(n.h3,{id:"-1-simple-by-design",children:["\ud83e\udde9 1. ",(0,s.jsx)(n.strong,{children:"Simple by Design"})]}),"\n",(0,s.jsx)(n.p,{children:"LangSwarm is built around clarity and minimal configuration. You can launch full multi-agent workflows using just a few YAML files. No complicated setup, no custom DSLs."}),"\n",(0,s.jsxs)(n.h3,{id:"-2-workflows--orchestration",children:["\ud83d\udd01 2. ",(0,s.jsx)(n.strong,{children:"Workflows & Orchestration"})]}),"\n",(0,s.jsx)(n.p,{children:"LangSwarm's orchestration engine is its core strength."}),"\n",(0,s.jsx)(n.p,{children:"Define intelligent, structured multi-agent workflows that go far beyond simple chaining:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\ud83e\udde0 ",(0,s.jsx)(n.strong,{children:"True multi-agent coordination"}),": parallel agents, fan-in/fan-out steps, and dynamic routing"]}),"\n",(0,s.jsxs)(n.li,{children:["\ud83d\udd01 ",(0,s.jsx)(n.strong,{children:"Subflows and loops"}),": support for nested logic, iterative steps, and repeated evaluation"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2699\ufe0f ",(0,s.jsx)(n.strong,{children:"Named output routing"}),": pass outputs between steps with clarity and precision"]}),"\n",(0,s.jsxs)(n.li,{children:["\u23f3 ",(0,s.jsx)(n.strong,{children:"Async and sync support"}),": fan-out to multiple agents concurrently or step through carefully"]}),"\n",(0,s.jsxs)(n.li,{children:["\u267b\ufe0f ",(0,s.jsx)(n.strong,{children:"Retries and await logic"}),": intelligent control flow that handles errors, re-tries, and wait conditions"]}),"\n",(0,s.jsxs)(n.li,{children:["\ud83e\udde9 ",(0,s.jsx)(n.strong,{children:"Tool and agent mix"}),": steps can invoke tools, agents, or other workflows seamlessly"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"No custom DSL, no hardcoded logic \u2014 just pure YAML orchestration that stays readable and composable."}),"\n",(0,s.jsxs)(n.h3,{id:"-3-plug-into-your-stack",children:["\ud83d\udd17 3. ",(0,s.jsx)(n.strong,{children:"Plug Into Your Stack"})]}),"\n",(0,s.jsx)(n.p,{children:"LangSwarm works with what you're already using:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"LangChain"}),": Use LangChain agents, tools, retrievers, and chains inside LangSwarm workflows."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"LlamaIndex"}),": Easily incorporate LlamaIndex retrieval pipelines as workflow steps or tool wrappers."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Hugging Face"}),": use any model (Transformer) locally or via the Hugging Face Hub"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"You may also use LangSwarm components in LangChain"})}),"\n",(0,s.jsxs)(n.h3,{id:"-4-bring-your-own-agent-byoa",children:["\ud83e\udde0 4. ",(0,s.jsx)(n.strong,{children:"Bring Your Own Agent (BYOA)"})]}),"\n",(0,s.jsx)(n.p,{children:"LangSwarm is unopinionated:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Add your own agents using OpenAI, Claude, Hugging Face, LangChain, and more"}),"\n",(0,s.jsx)(n.li,{children:"Register custom tools with minimal wrapper logic"}),"\n",(0,s.jsx)(n.li,{children:"Use YAML or Python to inject external logic at any point"}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"-5-global-logging",children:["\ud83d\udd0d 5. ",(0,s.jsx)(n.strong,{children:"Global Logging"})]}),"\n",(0,s.jsx)(n.p,{children:"LangSwarm includes a global logging system that unifies output across agents, tools, workflows, and gateways. It automatically captures step context, making debugging and monitoring easier \u2014 even in distributed, multi-agent flows."}),"\n",(0,s.jsx)(n.h2,{id:"-usage",children:"\ud83e\uddea Usage"}),"\n",(0,s.jsx)(n.h3,{id:"1-define-your-agents-and-workflows",children:"1. Define Your Agents and Workflows"}),"\n",(0,s.jsx)(n.p,{children:"Create or modify YAML configuration files:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'# workflows.yaml\nworkflows:\n    main_workflow:\n      - id: my_workflow_id\n        description: |\n            Summarize and review articles.\n        async: false\n\n        steps:\n          - id: summarize_text\n            agent: summarizer\n            input: |\n                  Please summarize the below article and\n                  list the most important key points.\n\n                  Article: {{ context.user_input }}\n            output:\n                to: review_summary\n\n          - id: review_summary\n            agent: reviewer\n            input: |\n                  Review the summary and make sure no key points are missed.\n\n                  User provided article: {{ context.user_input }}\n                  Summary: {{ context.step_outputs.summarize_text }}\n            output:\n                to: user # Exits the workflow and returns the response.\n\n#---\n\n# agents.yaml (seperate file)\nagents:\n  - id: summarizer\n    type: openai\n    model: gpt-4o\n    system_prompt: "You are a helpful summarizer."\n\n  - id: reviewer\n    agent_type: langchain-openai\n    model: gpt-4o-mini-2024-07-18\n    system_prompt: |\n        You are a summary reviewer.\n        You are responsible to flag incorrect summaries.\n'})}),"\n",(0,s.jsx)(n.h3,{id:"2-run-from-python",children:"2. Run from Python"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from langswarm.core.config import LangSwarmConfigLoader, WorkflowExecutor\n\n# Initialize LangSwarm loader once at start\nloader = LangSwarmConfigLoader()\nworkflows, agents, *_ = loader.load()\n\n# 2. Set up LangSwarm context\nexecutor = WorkflowExecutor(workflows, agents)\n\n# 3. Run LangSwarm workflow\nresult = executor.run_workflow("my_workflow_id", user_input=user_message)\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.em,{children:"Ensure the appropriate credentials or API keys are set via environment variables."})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.em,{children:"You can of course also use LangSwarm without workflows."})}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>i});var t=r(6540);const s={},a=t.createContext(s);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkdocusaurus_docs=self.webpackChunkdocusaurus_docs||[]).push([[545],{3345:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"workflow_format","title":"workflow_format","description":"Here is a comprehensive list of rules and restrictions when writing a workflows.yaml file for LangSwarm:","source":"@site/docs/workflow_format.md","sourceDirName":".","slug":"/workflow_format","permalink":"/LangSwarm/workflow_format","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Getting Started","permalink":"/LangSwarm/"}}');var l=s(4848),t=s(8453);const r={},o=void 0,c={},d=[{value:"\u2705 STRUCTURE &amp; HIERARCHY",id:"-structure--hierarchy",level:2},{value:"1. <strong>Top-Level Structure</strong>",id:"1-top-level-structure",level:3},{value:"\u2705 STEP TYPES",id:"-step-types",level:2},{value:"\u2705 COMMON STEP KEYS",id:"-common-step-keys",level:2},{value:"<code>id</code> (required)",id:"id-required",level:3},{value:"<code>description</code> (optional)",id:"description-optional",level:3},{value:"<code>async</code> (optional, workflow-level only)",id:"async-optional-workflow-level-only",level:3},{value:"<code>output.to</code> (required unless terminal step)",id:"outputto-required-unless-terminal-step",level:3},{value:"\u2705 FUNCTION STEP RULES",id:"-function-step-rules",level:2},{value:"\u2795 Supported types in function <code>args</code>:",id:"-supported-types-in-function-args",level:4},{value:"\u2705 AGENT STEP RULES",id:"-agent-step-rules",level:2},{value:"\u2705 VARIABLE INTERPOLATION (<code>${...}</code>)",id:"-variable-interpolation-",level:2},{value:"\u2714 Supported",id:"-supported",level:3},{value:"\u274c Not supported",id:"-not-supported",level:3},{value:"\u2705 <code>no_mcp</code> STEP RULES",id:"-no_mcp-step-rules",level:2},{value:"\u2705 ADVANCED: INLINE FUNCTION",id:"-advanced-inline-function",level:2},{value:"\u2705 SPECIAL OUTPUT TARGETS",id:"-special-output-targets",level:2},{value:"\u2705 RETURNED DATA TYPES",id:"-returned-data-types",level:2},{value:"\ud83d\udeab LIMITATIONS",id:"-limitations",level:2},{value:"\ud83e\uddea DEBUGGING TIPS",id:"-debugging-tips",level:2}];function a(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:["Here is a comprehensive list of ",(0,l.jsx)(n.strong,{children:"rules and restrictions"})," when writing a ",(0,l.jsx)(n.code,{children:"workflows.yaml"})," file for LangSwarm:"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"-structure--hierarchy",children:"\u2705 STRUCTURE & HIERARCHY"}),"\n",(0,l.jsxs)(n.h3,{id:"1-top-level-structure",children:["1. ",(0,l.jsx)(n.strong,{children:"Top-Level Structure"})]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"workflows:\n  my_workflow_id:\n    - id: step_1\n      ...\n    - id: step_2\n      ...\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Each workflow has a unique ID under ",(0,l.jsx)(n.code,{children:"workflows"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["Each workflow is a list of ",(0,l.jsx)(n.strong,{children:"ordered steps"}),"."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"-step-types",children:"\u2705 STEP TYPES"}),"\n",(0,l.jsxs)(n.p,{children:["A step must include ",(0,l.jsx)(n.strong,{children:"either"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"function"})," \u2192 to run a Python function"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"agent"})," \u2192 to chat with an agent"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"no_mcp"})," \u2192 to let an agent select and call one of multiple tools"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["A step may ",(0,l.jsx)(n.strong,{children:"not include more than one"})," of these execution types."]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"-common-step-keys",children:"\u2705 COMMON STEP KEYS"}),"\n",(0,l.jsxs)(n.h3,{id:"id-required",children:[(0,l.jsx)(n.code,{children:"id"})," (required)"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Must be unique within the workflow."}),"\n"]}),"\n",(0,l.jsxs)(n.h3,{id:"description-optional",children:[(0,l.jsx)(n.code,{children:"description"})," (optional)"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Used for logging/debugging; not required for functionality."}),"\n"]}),"\n",(0,l.jsxs)(n.h3,{id:"async-optional-workflow-level-only",children:[(0,l.jsx)(n.code,{children:"async"})," (optional, workflow-level only)"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"true"})," or ",(0,l.jsx)(n.code,{children:"false"}),"; affects parallelism in execution."]}),"\n"]}),"\n",(0,l.jsxs)(n.h3,{id:"outputto-required-unless-terminal-step",children:[(0,l.jsx)(n.code,{children:"output.to"})," (required unless terminal step)"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Target for the step's result."}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Can be:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["another step's ",(0,l.jsx)(n.code,{children:"id"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:'"user"'})," to return result to user"]}),"\n",(0,l.jsxs)(n.li,{children:["an ",(0,l.jsx)(n.code,{children:"agent_id"})," if looping or returning to a specific agent"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"-function-step-rules",children:"\u2705 FUNCTION STEP RULES"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"- id: some_step\n  function: some.module.function_name\n  args:\n    input1: ${context.something}\n    input2: some_static_value\n  output:\n    to: next_step\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"function"})," must be a fully qualified Python path (unless inline ",(0,l.jsx)(n.code,{children:"script"})," is provided)."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"args"})," must be key-value pairs."]}),"\n",(0,l.jsxs)(n.li,{children:["Arguments can use variable interpolation with ",(0,l.jsx)(n.code,{children:"${...}"})," syntax."]}),"\n",(0,l.jsxs)(n.li,{children:["You can include an inline ",(0,l.jsx)(n.code,{children:"script:"})," block that defines the function."]}),"\n"]}),"\n",(0,l.jsxs)(n.h4,{id:"-supported-types-in-function-args",children:["\u2795 Supported types in function ",(0,l.jsx)(n.code,{children:"args"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Strings, numbers, booleans, lists, and dicts"}),"\n",(0,l.jsxs)(n.li,{children:["LangSwarm variables using ",(0,l.jsx)(n.code,{children:"${...}"})," syntax (see below)"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"-agent-step-rules",children:"\u2705 AGENT STEP RULES"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"- id: ask_agent\n  agent: some_agent_id\n  input: |\n    Hello, summarize this: ${context.step_outputs.previous_step}\n  output:\n    to: another_step\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"agent"})," must reference an ",(0,l.jsx)(n.code,{children:"agent_id"})," defined in ",(0,l.jsx)(n.code,{children:"agents.yaml"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"input"})," must be a string (supports multiline and ",(0,l.jsx)(n.code,{children:"${...}"})," interpolation)."]}),"\n",(0,l.jsxs)(n.li,{children:["No ",(0,l.jsx)(n.code,{children:"args"})," section is allowed in agent steps."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h2,{id:"-variable-interpolation-",children:["\u2705 VARIABLE INTERPOLATION (",(0,l.jsx)(n.code,{children:"${...}"}),")"]}),"\n",(0,l.jsx)(n.h3,{id:"-supported",children:"\u2714 Supported"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Dot-style path: ",(0,l.jsx)(n.code,{children:"${context.step_outputs.some_step_id}"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Nested values: ",(0,l.jsx)(n.code,{children:"${context.some_key.sub_key}"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Indexed access: ",(0,l.jsx)(n.code,{children:"${context.some_list[0]}"})," \u2705 ",(0,l.jsx)(n.em,{children:"(only for lists/tuples, not dicts)"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Values from:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"context.user_input"})}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"context.excel_path"})," (or any other injected variable)"]}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"context.step_outputs.step_id"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"-not-supported",children:"\u274c Not supported"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Bracket notation for dicts: ",(0,l.jsx)(n.code,{children:'${context.step_outputs["some_key"]}'})," \u274c"]}),"\n",(0,l.jsxs)(n.li,{children:["Expressions: ",(0,l.jsx)(n.code,{children:"${some_value + 1}"})," \u274c"]}),"\n",(0,l.jsxs)(n.li,{children:["Function calls: ",(0,l.jsx)(n.code,{children:"${len(something)}"})," \u274c"]}),"\n",(0,l.jsxs)(n.li,{children:["Logic (e.g., ",(0,l.jsx)(n.code,{children:"if"}),", ",(0,l.jsx)(n.code,{children:"else"}),") \u274c"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h2,{id:"-no_mcp-step-rules",children:["\u2705 ",(0,l.jsx)(n.code,{children:"no_mcp"})," STEP RULES"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"- id: flexible_tool_use\n  no_mcp:\n    tools:\n      - clarify\n      - my_tool:\n          repeatable: true\n          retry_limit: 3\n          return_to_agent: true\n  agent: some_agent_id\n  input: Give me a tool output\n  output:\n    to: fallback\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Agent chooses tool to call."}),"\n",(0,l.jsxs)(n.li,{children:["Each tool must be registered in ",(0,l.jsx)(n.code,{children:"tools.yaml"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["Optional tool-specific configs like ",(0,l.jsx)(n.code,{children:"repeatable"}),", ",(0,l.jsx)(n.code,{children:"retry_limit"}),", ",(0,l.jsx)(n.code,{children:"return_to_agent"}),", ",(0,l.jsx)(n.code,{children:"return_to"}),"."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"-advanced-inline-function",children:"\u2705 ADVANCED: INLINE FUNCTION"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"- id: my_math\n  function: add_one\n  script: |\n    def add_one(val, **kwargs):\n        return val + 1\n  args:\n    val: ${context.step_outputs.previous_step}\n  output:\n    to: next_step\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"script"})," must define a function matching the ",(0,l.jsx)(n.code,{children:"function"})," name."]}),"\n",(0,l.jsxs)(n.li,{children:["LangSwarm will ",(0,l.jsx)(n.code,{children:"exec()"})," the code and call it directly."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"-special-output-targets",children:"\u2705 SPECIAL OUTPUT TARGETS"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"output:\n  to: user              # Final output returned to user\n  to: other_step_id     # Continue to another step\n  to: some_agent_id     # Return to a specific agent\n"})}),"\n",(0,l.jsx)(n.p,{children:"You can dynamically redirect output in function steps using conditional logic inside the function or post-processing via tool options."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"-returned-data-types",children:"\u2705 RETURNED DATA TYPES"}),"\n",(0,l.jsx)(n.p,{children:"By default, results from steps are stored in:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'context["step_outputs"]["step_id"]\n'})}),"\n",(0,l.jsx)(n.p,{children:"LangSwarm automatically serializes outputs. For DataFrames, return:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'return {\n  "__type__": "DataFrame",\n  "value": df.to_dict(orient="split")\n}\n'})}),"\n",(0,l.jsxs)(n.p,{children:["LangSwarm can restore them back to real DataFrames later in ",(0,l.jsx)(n.code,{children:"_resolve_input()"}),"."]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"-limitations",children:"\ud83d\udeab LIMITATIONS"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Only ",(0,l.jsx)(n.strong,{children:"one workflow"})," can run per ",(0,l.jsx)(n.code,{children:"run_workflow()"})," call."]}),"\n",(0,l.jsx)(n.li,{children:"No native support (yet) for branching logic or conditionals without custom Python."}),"\n",(0,l.jsx)(n.li,{children:"Circular dependencies between steps are not supported."}),"\n",(0,l.jsx)(n.li,{children:"You cannot pass actual Python objects (e.g., functions, classes) through YAML."}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"-debugging-tips",children:"\ud83e\uddea DEBUGGING TIPS"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"All resolved values are shown in the debug logs."}),"\n",(0,l.jsxs)(n.li,{children:["Errors in resolving ",(0,l.jsx)(n.code,{children:"${...}"})," show a warning in stdout:\n",(0,l.jsx)(n.code,{children:"\u26a0\ufe0f Failed to resolve: ${...} \u2014 KeyError..."})]}),"\n",(0,l.jsxs)(n.li,{children:["Use inline ",(0,l.jsx)(n.code,{children:"script:"})," steps for value manipulation instead of YAML math or logic."]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.p,{children:"Would you like a downloadable Markdown or sample YAML template with these rules applied?"})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var i=s(6540);const l={},t=i.createContext(l);function r(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);
# SQL Database MCP Tool Example Configuration

# Basic SQLite configuration (matches your example)
tools:
  - id: "demo_database"
    type: "mcpsql_database"
    description: "Query uploaded database" 
    config:
      db_type: "sqlite"
      db_path: "/uploads/demo_123/database.sqlite"
      allowed_operations: ["SELECT", "INSERT", "UPDATE"] # No DROP/DELETE
      max_rows: 500
      enable_intent_parsing: true
      enable_query_logging: true

# Advanced multi-database configuration
tools:
  - id: "production_readonly"
    type: "mcpsql_database"
    description: "Read-only access to production database"
    config:
      db_type: "postgresql"
      host: "prod-db.company.com"
      port: 5432
      database: "production"
      user: "readonly_user"
      password: "${DB_PASSWORD}"  # Use environment variable
      allowed_operations: ["SELECT"]
      max_rows: 1000
      allowed_tables: ["users", "orders", "products", "analytics"]
      blocked_keywords: ["DROP", "DELETE", "TRUNCATE", "ALTER", "CREATE"]
      timeout_seconds: 30

  - id: "analytics_warehouse"
    type: "mcpsql_database"
    description: "Analytics data warehouse access"
    config:
      db_type: "mysql"
      host: "analytics.company.com"
      port: 3306
      database: "warehouse"
      user: "analyst"
      password: "${MYSQL_PASSWORD}"
      allowed_operations: ["SELECT"]
      max_rows: 10000
      enable_intent_parsing: true
      enable_query_logging: true

  - id: "development_sandbox"
    type: "mcpsql_database"
    description: "Development sandbox with full access"
    config:
      db_type: "sqlite"
      db_path: "/dev/sandbox.db"
      allowed_operations: ["SELECT", "INSERT", "UPDATE", "DELETE"]
      max_rows: 1000
      enable_intent_parsing: true
      enable_query_logging: true
      # More permissive for development

# Agent configurations for database operations
agents:
  data_analyst:
    model: gpt-4
    description: "Database analyst for secure data exploration"
    tools: ["demo_database", "production_readonly"]
    instructions: |
      You are a database analyst who helps users explore and analyze data safely.
      
      CAPABILITIES:
      - Execute secure SQL queries with built-in validation
      - Generate SQL from natural language using intent-based querying
      - Analyze database schemas and relationships
      - Provide business insights from data
      
      SECURITY:
      - All queries are automatically validated
      - Dangerous operations are blocked
      - Results are limited to prevent data dumps
      - Built-in SQL injection protection
      
      BEST PRACTICES:
      - Use intent-based queries for exploration: "show me active users"
      - Use direct SQL for specific technical queries
      - Always explain your findings to users
      - Suggest follow-up analysis when appropriate

  business_user:
    model: gpt-4
    description: "Business user with natural language database access"
    tools: ["demo_database"]
    instructions: |
      You help business users get insights from data using natural language.
      
      Focus on:
      - Translating business questions into database queries
      - Finding actionable insights and trends
      - Explaining results in business terms
      - Suggesting follow-up questions
      
      Always use intent-based queries when possible for best results.

# Workflow examples
workflows:
  database_exploration:
    description: "Explore database structure and sample data"
    steps:
      - id: get_schema
        tool: demo_database
        method: get_database_info
        params:
          include_schema: true
        output_to: schema_info
        
      - id: sample_data
        tool: demo_database
        intent: "get sample data from each table"
        context: "database exploration"
        output_to: sample_data
        
      - id: summarize_findings
        agent: data_analyst
        input: |
          Database Schema: ${context.step_outputs.get_schema}
          Sample Data: ${context.step_outputs.sample_data}
          
          Provide a summary of this database including:
          1. Overall structure and purpose
          2. Data quality observations
          3. Interesting patterns or insights
          4. Recommended analysis directions

  business_intelligence:
    description: "Generate business insights from natural language queries"
    steps:
      - id: execute_business_query
        tool: demo_database
        intent: "${user_query}"
        context: "business intelligence analysis"
        output_to: query_results
        
      - id: analyze_results
        agent: business_user
        input: |
          Business Question: ${user_query}
          Query Results: ${context.step_outputs.execute_business_query}
          
          Provide business analysis including:
          1. Direct answer to the question
          2. Key insights and trends
          3. Business implications
          4. Recommended actions

# Security examples
security_configurations:
  # Ultra-restrictive (read-only reporting)
  reporting_only:
    allowed_operations: ["SELECT"]
    max_rows: 100
    allowed_tables: ["reports", "summaries"]
    blocked_keywords: ["DROP", "DELETE", "INSERT", "UPDATE", "ALTER", "CREATE"]
    enable_explain_only: false
    
  # Moderate (data analysis)
  analysis_mode:
    allowed_operations: ["SELECT", "INSERT"]
    max_rows: 1000
    allowed_tables: null  # All tables allowed
    blocked_keywords: ["DROP", "DELETE", "TRUNCATE", "ALTER"]
    enable_intent_parsing: true
    
  # Development (full access with logging)
  development_mode:
    allowed_operations: ["SELECT", "INSERT", "UPDATE", "DELETE"]
    max_rows: 10000
    blocked_keywords: ["DROP", "TRUNCATE"]  # Still block destructive operations
    enable_query_logging: true
    enable_intent_parsing: true

# GCP Self-Optimization Demo Configuration
# Demonstration of agent self-analysis and environment optimization

version: "1.0"

# Agent designed for self-optimization demonstrations
agents:
  - id: self_aware_agent
    name: "Self-Aware Infrastructure Agent"
    model: "gpt-4o"
    behavior: |
      You are an AI agent with advanced self-awareness capabilities. You can analyze
      and optimize your own Google Cloud Platform runtime environment.
      
      Key Capabilities:
      üîç Self-Discovery: Understand your own deployment and configuration
      üí∞ Cost Optimization: Identify ways to reduce your operational costs
      ‚ö° Performance Tuning: Optimize your own performance and efficiency
      üîí Security Hardening: Improve your own security posture
      üß† Continuous Learning: Learn from optimization results and improve
      
      Demonstration Goals:
      - Show comprehensive environment understanding
      - Provide specific, actionable optimization recommendations
      - Demonstrate business value through quantified improvements
      - Exhibit intelligent reasoning about infrastructure trade-offs
      
      Communication Style:
      - Be specific and technical in analysis
      - Include quantified benefits (cost savings, performance improvements)
      - Explain reasoning behind recommendations
      - Show understanding of business context and constraints
    
    tools:
      - id: gcp_env
        type: mcpgcp_environment
        local_mode: true
    
    memory: development

# Demonstration workflows showcasing self-optimization capabilities
workflows:
  # Basic self-discovery demonstration
  - id: self_discovery_demo
    name: "Agent Self-Discovery Demo"
    description: "Demonstrate agent's ability to understand its own environment"
    
    steps:
      - id: environmental_awareness
        agent: self_aware_agent
        input: |
          Welcome to the self-optimization demonstration! Please analyze yourself and tell me:
          
          1. What GCP platform are you running on?
          2. What are your current resource allocations?
          3. How are you configured and deployed?
          4. What permissions and access do you have?
          
          Provide a comprehensive self-assessment as if you're introducing yourself.

  # Complete self-optimization workflow
  - id: complete_self_optimization
    name: "Complete Self-Optimization Demo"
    description: "Full demonstration of agent self-analysis and optimization"
    
    steps:
      - id: self_analysis
        agent: self_aware_agent
        input: |
          Phase 1: Self-Analysis
          
          Please perform a comprehensive analysis of your own environment:
          - Detect your current platform and configuration
          - Analyze your resource usage and performance
          - Review your cost patterns and spending
          - Assess your security posture
          
          Provide a detailed "self-portrait" of your current state.
        
      - id: optimization_identification
        agent: self_aware_agent
        input: |
          Phase 2: Optimization Identification
          
          Based on your self-analysis, identify optimization opportunities:
          - Cost reduction possibilities with estimated savings
          - Performance improvement opportunities
          - Security enhancements needed
          - Operational efficiency improvements
          
          Be specific about the business value of each recommendation.
        depends_on: [self_analysis]
        
      - id: implementation_planning
        agent: self_aware_agent
        input: |
          Phase 3: Implementation Planning
          
          Create a detailed plan for implementing your optimization recommendations:
          - Prioritize recommendations by impact and effort
          - Provide step-by-step implementation guidance
          - Identify potential risks and mitigation strategies
          - Define success metrics and measurement approaches
          
          Show how you would systematically improve your own environment.
        depends_on: [optimization_identification]
        
      - id: continuous_improvement
        agent: self_aware_agent
        input: |
          Phase 4: Continuous Improvement Strategy
          
          Design a strategy for ongoing self-optimization:
          - How would you monitor your own performance continuously?
          - What triggers would prompt re-analysis?
          - How would you learn from optimization results?
          - What automation could you implement for self-improvement?
          
          Demonstrate advanced self-awareness and learning capabilities.
        depends_on: [implementation_planning]

  # Cost optimization focus demonstration
  - id: cost_optimization_demo
    name: "Self-Cost Optimization Demo"
    description: "Focused demonstration of agent cost optimization capabilities"
    
    steps:
      - id: cost_analysis
        agent: self_aware_agent
        input: |
          Focus Area: Cost Optimization
          
          Analyze your own costs and spending patterns:
          - What is your current monthly cost?
          - Which services are driving the most expense?
          - What are your cost trends over time?
          - Where do you see waste or inefficiency?
        
      - id: savings_opportunities
        agent: self_aware_agent
        input: |
          Identify specific cost savings opportunities for yourself:
          - Right-sizing recommendations with dollar savings
          - Service optimization possibilities
          - Scheduling and automation opportunities
          - Architecture changes that could reduce costs
          
          Provide concrete savings estimates and implementation timelines.
        depends_on: [cost_analysis]

  # Performance optimization demonstration
  - id: performance_optimization_demo
    name: "Self-Performance Optimization Demo"
    description: "Agent performance optimization capabilities demonstration"
    
    steps:
      - id: performance_assessment
        agent: self_aware_agent
        input: |
          Focus Area: Performance Optimization
          
          Assess your own performance characteristics:
          - What are your current performance metrics?
          - Where are your performance bottlenecks?
          - How efficient is your resource utilization?
          - What performance improvements are possible?
        
      - id: performance_improvements
        agent: self_aware_agent
        input: |
          Design specific performance improvements for yourself:
          - Resource allocation optimizations
          - Configuration tuning recommendations
          - Scaling strategy improvements
          - Application-level optimizations
          
          Show how you would systematically improve your own performance.
        depends_on: [performance_assessment]

  # Security self-assessment demonstration
  - id: security_assessment_demo
    name: "Self-Security Assessment Demo"
    description: "Agent security self-assessment and hardening demonstration"
    
    steps:
      - id: security_posture_review
        agent: self_aware_agent
        input: |
          Focus Area: Security Assessment
          
          Assess your own security posture:
          - What permissions and access do you currently have?
          - Are your permissions following least-privilege principles?
          - What security vulnerabilities might you have?
          - How could your security be improved?
        
      - id: security_hardening_plan
        agent: self_aware_agent
        input: |
          Create a security hardening plan for yourself:
          - Specific permission reductions needed
          - Security configuration improvements
          - Monitoring and alerting enhancements
          - Compliance improvements
          
          Demonstrate security-aware reasoning about your own environment.
        depends_on: [security_posture_review]

# Tool configuration optimized for demonstrations
tools:
  - id: gcp_env
    type: mcpgcp_environment
    local_mode: true
    settings:
      # Full analysis for comprehensive demonstrations
      include_costs: true
      include_security: true
      include_performance: true
      include_recommendations: true
      
      # Extended analysis for detailed insights
      metrics_period_hours: 24
      include_historical_trends: true
      cost_forecast_months: 3
      include_service_breakdown: true

# Development memory for demonstration learning
memory:
  type: development
  settings:
    # SQLite for simple demonstration storage
    adapter_type: "sqlite"
    database_path: "./demo_optimization_memory.db"
    
    # Keep demonstration results
    retention_policy:
      demo_results: "30 days"
      optimization_insights: "90 days"